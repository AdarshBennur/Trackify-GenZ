apiVersion: v1
kind: ServiceAccount
metadata:
  name: prometheus
  namespace: trackify-streamlined

---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: prometheus
rules:
- apiGroups: [""]
  resources:
  - nodes
  - nodes/proxy
  - services
  - endpoints
  - pods
  verbs: ["get", "list", "watch"]
- apiGroups:
  - extensions
  resources:
  - ingresses
  verbs: ["get", "list", "watch"]

---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: prometheus
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: prometheus
subjects:
- kind: ServiceAccount
  name: prometheus
  namespace: trackify-streamlined

---
apiVersion: v1
kind: ConfigMap
metadata:
  name: prometheus-config
  namespace: trackify-streamlined
data:
  prometheus.yml: |
    global:
      scrape_interval: 15s
      evaluation_interval: 15s

    scrape_configs:
      # Prometheus itself
      - job_name: 'prometheus'
        static_configs:
          - targets: ['localhost:9090']
        metrics_path: /metrics
        scrape_interval: 15s

      # Trackify Server - Kubernetes Service Discovery
      - job_name: 'trackify-server-k8s'
        kubernetes_sd_configs:
          - role: endpoints
            namespaces:
              names:
                - trackify-streamlined
        relabel_configs:
          - source_labels: [__meta_kubernetes_service_name]
            action: keep
            regex: server-service
          - source_labels: [__meta_kubernetes_endpoint_port_name]
            action: keep
            regex: http
          - source_labels: [__address__]
            target_label: __address__
            regex: '([^:]+):.*'
            replacement: '${1}:5001'
          - target_label: __metrics_path__
            replacement: /api/metrics

      # SonarQube Metrics
      - job_name: 'sonarqube'
        static_configs:
          - targets: ['sonarqube-service:9000']
        metrics_path: '/api/monitoring/metrics'
        scrape_interval: 60s

      # Vault Metrics  
      - job_name: 'vault'
        static_configs:
          - targets: ['vault-service:8200']
        metrics_path: '/v1/sys/metrics'
        params:
          format: ['prometheus']
        scrape_interval: 30s
        bearer_token: 'myroot'

      # Grafana Metrics
      - job_name: 'grafana'
        static_configs:
          - targets: ['grafana-service:3000']
        metrics_path: '/metrics'
        scrape_interval: 30s

---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: prometheus-pvc
  namespace: trackify-streamlined
spec:
  accessModes:
    - ReadWriteOnce
  resources:
    requests:
      storage: 5Gi

---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: prometheus-deployment
  namespace: trackify-streamlined
  labels:
    app: prometheus
spec:
  replicas: 1
  selector:
    matchLabels:
      app: prometheus
  template:
    metadata:
      labels:
        app: prometheus
    spec:
      serviceAccountName: prometheus
      containers:
      - name: prometheus
        image: prom/prometheus:v2.48.0
        ports:
        - containerPort: 9090
        args:
          - '--config.file=/etc/prometheus/prometheus.yml'
          - '--storage.tsdb.path=/prometheus'
          - '--web.console.libraries=/etc/prometheus/console_libraries'
          - '--web.console.templates=/etc/prometheus/consoles'
          - '--storage.tsdb.retention.time=15d'
          - '--web.enable-lifecycle'
          - '--web.enable-admin-api'
        volumeMounts:
        - name: prometheus-config
          mountPath: /etc/prometheus/prometheus.yml
          subPath: prometheus.yml
        - name: prometheus-storage
          mountPath: /prometheus
        resources:
          requests:
            memory: "512Mi"
            cpu: "500m"
          limits:
            memory: "1Gi"
            cpu: "1000m"
        livenessProbe:
          httpGet:
            path: /-/healthy
            port: 9090
          initialDelaySeconds: 30
          periodSeconds: 10
        readinessProbe:
          httpGet:
            path: /-/ready
            port: 9090
          initialDelaySeconds: 5
          periodSeconds: 5
      volumes:
      - name: prometheus-config
        configMap:
          name: prometheus-config
      - name: prometheus-storage
        persistentVolumeClaim:
          claimName: prometheus-pvc

---
apiVersion: v1
kind: Service
metadata:
  name: prometheus-service
  namespace: trackify-streamlined
  labels:
    app: prometheus
spec:
  type: NodePort
  ports:
  - port: 9090
    targetPort: 9090
    nodePort: 30090
  selector:
    app: prometheus 