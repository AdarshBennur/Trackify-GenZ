apiVersion: v1
kind: ConfigMap
metadata:
  name: backend-config
  namespace: expense-tracker
  labels:
    app: expense-tracker
    component: backend
data:
  client-url: "http://frontend-service:3000"
  node-env: "production"
  port: "5001"
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: frontend-config
  namespace: expense-tracker
  labels:
    app: expense-tracker
    component: frontend
data:
  api-url: "http://backend-service:5001/api"
  app-env: "production"
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: mongodb-init
  namespace: expense-tracker
  labels:
    app: expense-tracker
    component: database
data:
  mongo-init.js: |
    // MongoDB Initialization Script for Expense Tracker
    // This script runs when MongoDB container starts for the first time

    // Switch to the expense tracker database
    db = db.getSiblingDB('expensetracker');

    // Create the application user with read/write access
    db.createUser({
      user: 'appuser',
      pwd: 'apppassword',
      roles: [
        {
          role: 'readWrite',
          db: 'expensetracker'
        }
      ]
    });

    // Create initial collections with basic structure
    db.createCollection('users');
    db.createCollection('expenses');
    db.createCollection('incomes');
    db.createCollection('budgets');
    db.createCollection('goals');
    db.createCollection('reminders');
    db.createCollection('currencies');

    // Create indexes for better performance
    db.users.createIndex({ "email": 1 }, { unique: true });
    db.users.createIndex({ "createdAt": 1 });

    db.expenses.createIndex({ "userId": 1 });
    db.expenses.createIndex({ "date": -1 });
    db.expenses.createIndex({ "category": 1 });

    db.incomes.createIndex({ "userId": 1 });
    db.incomes.createIndex({ "date": -1 });

    db.budgets.createIndex({ "userId": 1 });
    db.budgets.createIndex({ "month": 1, "year": 1 });

    db.goals.createIndex({ "userId": 1 });
    db.goals.createIndex({ "targetDate": 1 });

    db.reminders.createIndex({ "userId": 1 });
    db.reminders.createIndex({ "dueDate": 1 });

    db.currencies.createIndex({ "code": 1 }, { unique: true });

    // Insert default currencies
    db.currencies.insertMany([
      {
        code: 'USD',
        name: 'US Dollar',
        symbol: '$',
        isDefault: true,
        createdAt: new Date()
      },
      {
        code: 'EUR',
        name: 'Euro',
        symbol: '‚Ç¨',
        isDefault: false,
        createdAt: new Date()
      },
      {
        code: 'GBP',
        name: 'British Pound',
        symbol: '¬£',
        isDefault: false,
        createdAt: new Date()
      },
      {
        code: 'INR',
        name: 'Indian Rupee',
        symbol: '‚Çπ',
        isDefault: false,
        createdAt: new Date()
      },
      {
        code: 'CAD',
        name: 'Canadian Dollar',
        symbol: 'C$',
        isDefault: false,
        createdAt: new Date()
      }
    ]);

    print('‚úÖ Database initialization completed successfully!');
    print('üìä Collections created: users, expenses, incomes, budgets, goals, reminders, currencies');
    print('üîç Indexes created for optimal performance');
    print('üí∞ Default currencies initialized');
    print('üë§ Application user created with readWrite permissions'); 