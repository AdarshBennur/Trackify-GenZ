groups:
  - name: expense_tracker_alerts
    rules:
      # ================================
      # APPLICATION ALERTS
      # ================================
      
      - alert: BackendDown
        expr: up{job="trackify-backend"} == 0
        for: 1m
        labels:
          severity: critical
          service: backend
        annotations:
          summary: "Expense Tracker Backend is down"
          description: "The Expense Tracker backend service has been down for more than 1 minute."

      - alert: FrontendDown
        expr: up{job="trackify-frontend"} == 0
        for: 1m
        labels:
          severity: critical
          service: frontend
        annotations:
          summary: "Expense Tracker Frontend is down"
          description: "The Expense Tracker frontend service has been down for more than 1 minute."

      - alert: HighResponseTime
        expr: avg(rate(http_request_duration_seconds_sum[5m])) > 0.5
        for: 2m
        labels:
          severity: warning
          service: backend
        annotations:
          summary: "High response time detected"
          description: "Average response time is {{ $value }}s over the last 5 minutes."

      - alert: HighErrorRate
        expr: rate(http_requests_total{status=~"5.."}[5m]) > 0.1
        for: 1m
        labels:
          severity: critical
          service: backend
        annotations:
          summary: "High error rate detected"
          description: "Error rate is {{ $value }} errors per second over the last 5 minutes."

  - name: infrastructure_alerts
    rules:
      # ================================
      # INFRASTRUCTURE ALERTS
      # ================================
      
      - alert: HighCPUUsage
        expr: 100 - (avg by(instance) (rate(node_cpu_seconds_total{mode="idle"}[5m])) * 100) > 80
        for: 2m
        labels:
          severity: warning
          service: infrastructure
        annotations:
          summary: "High CPU usage detected"
          description: "CPU usage is above 80% on {{ $labels.instance }} for more than 2 minutes."

      - alert: HighMemoryUsage
        expr: (1 - (node_memory_MemAvailable_bytes / node_memory_MemTotal_bytes)) * 100 > 85
        for: 2m
        labels:
          severity: warning
          service: infrastructure
        annotations:
          summary: "High memory usage detected"
          description: "Memory usage is above 85% on {{ $labels.instance }} for more than 2 minutes."

      - alert: LowDiskSpace
        expr: (1 - (node_filesystem_avail_bytes / node_filesystem_size_bytes)) * 100 > 85
        for: 1m
        labels:
          severity: warning
          service: infrastructure
        annotations:
          summary: "Low disk space detected"
          description: "Disk usage is above 85% on {{ $labels.instance }} mount {{ $labels.mountpoint }}."

  - name: devops_services_alerts
    rules:
      # ================================
      # DEVOPS SERVICES ALERTS
      # ================================
      
      - alert: PrometheusDown
        expr: up{job="prometheus"} == 0
        for: 1m
        labels:
          severity: critical
          service: monitoring
        annotations:
          summary: "Prometheus is down"
          description: "Prometheus monitoring service has been down for more than 1 minute."

      - alert: GrafanaDown
        expr: up{job="grafana"} == 0
        for: 1m
        labels:
          severity: critical
          service: monitoring
        annotations:
          summary: "Grafana is down"
          description: "Grafana dashboard service has been down for more than 1 minute."

      - alert: VaultDown
        expr: up{job="vault"} == 0
        for: 1m
        labels:
          severity: critical
          service: security
        annotations:
          summary: "Vault is down"
          description: "HashiCorp Vault service has been down for more than 1 minute."

      - alert: VaultSealed
        expr: vault_core_unsealed == 0
        for: 0m
        labels:
          severity: critical
          service: security
        annotations:
          summary: "Vault is sealed"
          description: "HashiCorp Vault is sealed and cannot access secrets."

      - alert: SonarQubeDown
        expr: up{job="sonarqube"} == 0
        for: 2m
        labels:
          severity: warning
          service: code-quality
        annotations:
          summary: "SonarQube is down"
          description: "SonarQube code quality service has been down for more than 2 minutes."

  - name: kubernetes_alerts
    rules:
      # ================================
      # KUBERNETES ALERTS
      # ================================
      
      - alert: KubernetesPodCrashLooping
        expr: rate(kube_pod_container_status_restarts_total[15m]) > 0
        for: 1m
        labels:
          severity: warning
          service: kubernetes
        annotations:
          summary: "Pod is crash looping"
          description: "Pod {{ $labels.pod }} in namespace {{ $labels.namespace }} is crash looping."

      - alert: KubernetesPodNotReady
        expr: kube_pod_status_ready{condition="false"} == 1
        for: 5m
        labels:
          severity: warning
          service: kubernetes
        annotations:
          summary: "Pod not ready"
          description: "Pod {{ $labels.pod }} in namespace {{ $labels.namespace }} has been not ready for more than 5 minutes."

      - alert: KubernetesNodeNotReady
        expr: kube_node_status_condition{condition="Ready",status="true"} == 0
        for: 1m
        labels:
          severity: critical
          service: kubernetes
        annotations:
          summary: "Node not ready"
          description: "Node {{ $labels.node }} has been not ready for more than 1 minute."

      - alert: KubernetesDeploymentReplicasMismatch
        expr: kube_deployment_spec_replicas != kube_deployment_status_available_replicas
        for: 5m
        labels:
          severity: warning
          service: kubernetes
        annotations:
          summary: "Deployment replicas mismatch"
          description: "Deployment {{ $labels.deployment }} in namespace {{ $labels.namespace }} has {{ $value }} available replicas, expected {{ $labels.spec_replicas }}."

  - name: database_alerts
    rules:
      # ================================
      # DATABASE ALERTS
      # ================================
      
      - alert: MongoDBDown
        expr: up{job="mongodb-exporter"} == 0
        for: 1m
        labels:
          severity: critical
          service: database
        annotations:
          summary: "MongoDB is down"
          description: "MongoDB database service has been down for more than 1 minute."

      - alert: MongoDBHighConnections
        expr: mongodb_connections{state="current"} / mongodb_connections{state="available"} > 0.8
        for: 2m
        labels:
          severity: warning
          service: database
        annotations:
          summary: "MongoDB high connection usage"
          description: "MongoDB connection usage is above 80% ({{ $value }})."

      - alert: PostgreSQLDown
        expr: up{job="sonarqube-db"} == 0
        for: 1m
        labels:
          severity: critical
          service: database
        annotations:
          summary: "PostgreSQL is down"
          description: "PostgreSQL database service for SonarQube has been down for more than 1 minute." 