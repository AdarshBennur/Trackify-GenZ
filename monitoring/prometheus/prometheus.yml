global:
  scrape_interval: 15s
  evaluation_interval: 15s
  external_labels:
    cluster: 'expense-tracker'
    replica: 'prometheus'

rule_files:
  - "alert_rules.yml"

alerting:
  alertmanagers:
    - static_configs:
        - targets:
          - alertmanager:9093

scrape_configs:
  # Prometheus self-monitoring
  - job_name: 'prometheus'
    static_configs:
      - targets: ['localhost:9090']

  # Node Exporter for system metrics
  - job_name: 'node-exporter'
    static_configs:
      - targets: 
        - 'node-exporter:9100'
    scrape_interval: 5s
    metrics_path: /metrics

  # ================================
  # APPLICATION SERVICES (Docker Compose)
  # ================================
  
  # Expense Tracker Backend (Docker Compose)
  - job_name: 'trackify-backend'
    static_configs:
      - targets: ['server:5001']
    metrics_path: '/api/metrics'
    scrape_interval: 10s
    basic_auth:
      username: 'prometheus'
      password: 'prometheus'

  # Expense Tracker Frontend (Docker Compose)
  - job_name: 'trackify-frontend'
    static_configs:
      - targets: ['client:3000']
    metrics_path: '/metrics'
    scrape_interval: 10s

  # ================================
  # DEVOPS SERVICES MONITORING
  # ================================
  
  # Vault Monitoring
  - job_name: 'vault'
    static_configs:
      - targets: ['vault:8200']
    metrics_path: '/v1/sys/metrics'
    params:
      format: ['prometheus']
    scrape_interval: 15s

  # SonarQube Monitoring
  - job_name: 'sonarqube'
    static_configs:
      - targets: ['sonarqube:9000']
    metrics_path: '/api/monitoring/metrics'
    scrape_interval: 30s

  # Grafana Monitoring
  - job_name: 'grafana'
    static_configs:
      - targets: ['grafana:3000']
    metrics_path: '/metrics'
    scrape_interval: 15s

  # ================================
  # KUBERNETES SERVICES (for k8s deployment)
  # ================================

  # Kubernetes API Server
  - job_name: 'kubernetes-apiservers'
    kubernetes_sd_configs:
      - role: endpoints
        namespaces:
          names:
            - default
    scheme: https
    tls_config:
      ca_file: /var/run/secrets/kubernetes.io/serviceaccount/ca.crt
      insecure_skip_verify: true
    bearer_token_file: /var/run/secrets/kubernetes.io/serviceaccount/token
    relabel_configs:
      - source_labels: [__meta_kubernetes_namespace, __meta_kubernetes_service_name, __meta_kubernetes_endpoint_port_name]
        action: keep
        regex: default;kubernetes;https

  # Kubernetes Nodes
  - job_name: 'kubernetes-nodes'
    kubernetes_sd_configs:
      - role: node
    scheme: https
    tls_config:
      ca_file: /var/run/secrets/kubernetes.io/serviceaccount/ca.crt
      insecure_skip_verify: true
    bearer_token_file: /var/run/secrets/kubernetes.io/serviceaccount/token
    relabel_configs:
      - action: labelmap
        regex: __meta_kubernetes_node_label_(.+)

  # Kubernetes Pods
  - job_name: 'kubernetes-pods'
    kubernetes_sd_configs:
      - role: pod
        namespaces:
          names:
            - expense-tracker
            - expense-tracker-dev
    relabel_configs:
      - source_labels: [__meta_kubernetes_pod_annotation_prometheus_io_scrape]
        action: keep
        regex: true
      - source_labels: [__meta_kubernetes_pod_annotation_prometheus_io_path]
        action: replace
        target_label: __metrics_path__
        regex: (.+)
      - source_labels: [__address__, __meta_kubernetes_pod_annotation_prometheus_io_port]
        action: replace
        regex: ([^:]+)(?::\d+)?;(\d+)
        replacement: $1:$2
        target_label: __address__
      - action: labelmap
        regex: __meta_kubernetes_pod_label_(.+)
      - source_labels: [__meta_kubernetes_namespace]
        action: replace
        target_label: kubernetes_namespace
      - source_labels: [__meta_kubernetes_pod_name]
        action: replace
        target_label: kubernetes_pod_name

  # Expense Tracker Backend (Kubernetes)
  - job_name: 'expense-tracker-backend-k8s'
    kubernetes_sd_configs:
      - role: service
        namespaces:
          names:
            - expense-tracker
    relabel_configs:
      - source_labels: [__meta_kubernetes_service_name]
        action: keep
        regex: backend-service
      - source_labels: [__meta_kubernetes_service_port_name]
        action: keep
        regex: http
    metrics_path: '/api/metrics'
    scrape_interval: 10s

  # Expense Tracker Frontend (Kubernetes)
  - job_name: 'expense-tracker-frontend-k8s'
    kubernetes_sd_configs:
      - role: service
        namespaces:
          names:
            - expense-tracker
    relabel_configs:
      - source_labels: [__meta_kubernetes_service_name]
        action: keep
        regex: frontend-service
      - source_labels: [__meta_kubernetes_service_port_name]
        action: keep
        regex: http
    metrics_path: '/metrics'
    scrape_interval: 10s

  # ================================
  # EXTERNAL MONITORING
  # ================================

  # MongoDB Exporter
  - job_name: 'mongodb-exporter'
    static_configs:
      - targets: ['mongodb-exporter:9216']
    scrape_interval: 10s

  # Nginx Exporter
  - job_name: 'nginx-exporter'
    static_configs:
      - targets: ['nginx-exporter:9113']
    scrape_interval: 10s

  # Blackbox Exporter for endpoint monitoring
  - job_name: 'blackbox'
    metrics_path: /probe
    params:
      module: [http_2xx]
    static_configs:
      - targets:
        - http://client:3000
        - http://server:5001/api/health
        - http://grafana:3000
        - http://vault:8200/v1/sys/health
        - http://sonarqube:9000/api/system/status
    relabel_configs:
      - source_labels: [__address__]
        target_label: __param_target
      - source_labels: [__param_target]
        target_label: instance
      - target_label: __address__
        replacement: blackbox-exporter:9115

  # Docker container metrics (if using docker exporter)
  - job_name: 'docker'
    static_configs:
      - targets: ['docker-exporter:9323']
    scrape_interval: 15s 