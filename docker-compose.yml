# Docker Compose for Trackify-GenZ Application
# Optimized for Docker Desktop with MongoDB Atlas

services:
  # React Frontend Service
  client:
    build:
      context: ./client
      dockerfile: Dockerfile
      target: ${BUILD_TARGET:-development}
    container_name: trackify-client
    restart: unless-stopped
    environment:
      REACT_APP_API_URL: ${REACT_APP_API_URL:-http://localhost:5001/api}
      REACT_APP_ENV: ${NODE_ENV:-development}
      # Bind to all interfaces in development
      HOST: 0.0.0.0
      # Increase memory limit for React dev server
      NODE_OPTIONS: "--max-old-space-size=4096"
    ports:
      - "${CLIENT_PORT:-3000}:3000"
    volumes:
      # Mount source code for development hot reload
      - ./client:/app
      - /app/node_modules
    networks:
      - trackify-network
    depends_on:
      server:
        condition: service_healthy
    healthcheck:
      test: ["CMD-SHELL", "./healthcheck.sh"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 45s
    deploy:
      resources:
        limits:
          memory: 1G
        reservations:
          memory: 512M
    labels:
      - "com.docker.compose.service=client"
      - "trackify.service=frontend"
      - "trackify.url=http://localhost:${CLIENT_PORT:-3000}"

  # Node.js Backend API Service
  server:
    build:
      context: ./server
      dockerfile: Dockerfile
      target: ${BUILD_TARGET:-development}
    container_name: trackify-server
    restart: unless-stopped
    # Load environment variables from .env file
    env_file:
      - .env
    environment:
      NODE_ENV: ${NODE_ENV:-development}
      PORT: ${SERVER_PORT:-5001}
      # MongoDB Atlas Connection
      MONGO_URI: mongodb+srv://aditrack:track999@tracker.pq6xgts.mongodb.net/expensetracker?retryWrites=true&w=majority&appName=tracker
      JWT_SECRET: ${JWT_SECRET:-supersecretjwtkey123456789}
      JWT_EXPIRE: ${JWT_EXPIRE:-30d}
      JWT_COOKIE_EXPIRE: ${JWT_COOKIE_EXPIRE:-30}
      CLIENT_URL: ${CLIENT_URL:-http://localhost:3000}
      # Debug settings for authentication
      DEBUG_AUTH: ${DEBUG_AUTH:-true}
      BCRYPT_ROUNDS: ${BCRYPT_ROUNDS:-10}
      # Increase memory limit for Node.js
      NODE_OPTIONS: "--max-old-space-size=2048"
    ports:
      - "${SERVER_PORT:-5001}:5001"
    volumes:
      # Mount source code for development hot reload
      - ./server:/app
      - /app/node_modules
    networks:
      - trackify-network
    healthcheck:
      test: ["CMD-SHELL", "./healthcheck.sh"]
      interval: 30s
      timeout: 15s
      retries: 5
      start_period: 60s
    deploy:
      resources:
        limits:
          memory: 1G
        reservations:
          memory: 512M
    labels:
      - "com.docker.compose.service=server"
      - "trackify.service=backend"
      - "trackify.url=http://localhost:${SERVER_PORT:-5001}/api"

# Network Configuration
networks:
  trackify-network:
    driver: bridge
    name: trackify-network
    driver_opts:
      com.docker.network.driver.mtu: 1450

# Volume Configuration for Data Persistence
volumes:
  mongo_data:
    driver: local
    name: trackify-mongo-data
  mongo_config:
    driver: local
    name: trackify-mongo-config 